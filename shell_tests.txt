< prompt.c sort > ./outfile && < ./outfile wc -l > ./another_file
< prompt.c sort > ./outfile && < ./outfile tr -d ' ' > ./another_file && < ./another_file tr -d '0-5' > ./another_other_file
(echo "First command" && echo "Second command") && echo "All commands executed"
(false || echo "Failed") || echo "All commands failed"
(false || echo "Failed") && echo "All commands failed"
(true && echo "Success") || echo "All commands failed"
(true && echo "Success") && echo "All commands succeded"
(echo "First command" && (false && echo "Second command")) && echo "All commands executed"
(echo "First command" && (false && echo "Second command")) || echo "Some commands executed"
true && echo "Second command" && ls (echo "All commands executed") 

3 - 5 + (2 * 10)
3 5* 2 10-

export ABC= (a b c d e f)
echo ${ABC [3]} = d

prompt.c, sort, <, ./outfile, >, &&, ./outfile, wc -l, <, ./another_file, > 


//stack vazia, operador de maior precedencia que anterior na stack, e operadores entre parentesis at√© o fechamento, destino = stack
//operadores de igual ou menor precedencia, antigo operador igual ou de menor precedencia na stack, destino = output
//operador de igual ou menor precedencia vindo da pilha, destino = stack